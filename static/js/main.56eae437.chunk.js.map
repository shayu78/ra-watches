{"version":3,"sources":["components/Form/Form.jsx","components/List/List.jsx","components/Clock/Clock.jsx","components/ListItem/ListItem.jsx","components/WorldClockWidget/WorldClockWidget.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["DEFAULT_FORM_VALUE","city","timezone","Form","props","onHandleSubmit","useState","form","setForm","onInputChange","event","target","name","value","prev","className","onSubmit","preventDefault","htmlFor","id","required","onChange","type","min","max","List","id_data","data","map","nanoid","children","Clock","state","currentHourDegree","currentMinuteDegree","currentSecondDegree","dateTime","interval","undefined","secondsStyle","transform","this","minutesStyle","hoursStyle","Fragment","item","onClick","onDeleteItem","style","getNumberWithSign","timeZone","parseInt","day","moment","utc","hour","minute","second","setState","add","format","input","Math","abs","setData","setInterval","clearInterval","Component","ListItem","WorldClockWidget","handleDeleteItem","filter","some","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56eae437.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DEFAULT_FORM_VALUE = {\r\n  city: '',\r\n  timezone: 0,  \r\n};\r\n\r\nexport default function Form(props) {\r\n  const { onHandleSubmit } = props;\r\n  const [form, setForm] = useState(DEFAULT_FORM_VALUE);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    onHandleSubmit(form);\r\n    setForm(DEFAULT_FORM_VALUE);\r\n  }\r\n\r\n  const onInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setForm((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={onSubmit}>\r\n      <div className=\"form__input__container\">\r\n        <label className=\"form__label\" htmlFor=\"city\">Название города</label>\r\n        <input className=\"form__input\" value={form.city} name=\"city\"\r\n          id=\"city\" required onChange={onInputChange} />\r\n      </div>\r\n      <div className=\"form__input__container\">\r\n        <label className=\"form__label\" htmlFor=\"timezone\">Временная зона</label>\r\n        <input type=\"number\" className=\"form__input\" value={form.timezone} name=\"timezone\"\r\n          id=\"timezone\" min=\"-11\" max=\"11\" required onChange={onInputChange} />\r\n      </div>\r\n      <button className=\"form__button\">Добавить</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  onHandleSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport default function List(props) {\r\n  const { className, data } = props;\r\n\r\n  const id_data = data.map((value) => {\r\n    value.id = nanoid();\r\n    return value;\r\n  });\r\n\r\n  return (\r\n    <ul className={className}>\r\n      {props.children(id_data)}\r\n    </ul>\r\n  );\r\n}\r\n\r\nList.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport \"moment/locale/ru\";\r\n\r\nexport default class Clock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentHourDegree: 0,\r\n      currentMinuteDegree: 0,\r\n      currentSecondDegree: 0,\r\n      dateTime: '',\r\n    };\r\n\r\n    this.interval = undefined;\r\n  }\r\n\r\n  render() {\r\n    const secondsStyle = {\r\n      transform: `rotate(${this.state.currentSecondDegree}deg)`,\r\n    }\r\n\r\n    const minutesStyle = {\r\n      transform: `rotate(${this.state.currentMinuteDegree}deg)`,\r\n    }\r\n\r\n    const hoursStyle = {\r\n      transform: `rotate(${this.state.currentHourDegree}deg)`,\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"top__clock__info\">\r\n          <p className=\"clock__city\">{this.props.item.city}</p>\r\n          <div className=\"clock__delete\" onClick={() => this.props.onDeleteItem(this.props.item.id)}>&#x2716;</div>\r\n        </div>\r\n        <div className=\"clock\">\r\n          <div style={hoursStyle} className=\"hour__hand\"></div>\r\n          <div style={minutesStyle} className=\"minute__hand\"></div>\r\n          <div style={secondsStyle} className=\"second__hand\"></div>\r\n        </div>\r\n        <div className=\"bottom__clock__info\">\r\n          <p className=\"clock__timezone\">UTC{this.getNumberWithSign(this.props.item.timezone)}:00</p>\r\n          <p className=\"clock__humandate\">{this.state.dateTime}</p>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  setData() {\r\n    const timeZone = parseInt(this.props.item.timezone);\r\n    // const day = new Date();\r\n    // const currentHourDegree = 30 * ((day.getUTCHours() + timeZone) + (1 / 60) * day.getUTCMinutes());\r\n    // const currentMinuteDegree = 6 * (day.getUTCMinutes() + (1 / 60) * day.getUTCSeconds());\r\n    // const currentSecondDegree = day.getUTCSeconds() * 6;\r\n\r\n    const day = moment().utc();\r\n    const currentHourDegree = 30 * ((day.hour() + timeZone) + + (1 / 60) * day.minute());\r\n    const currentMinuteDegree = 6 * (day.minute() + (1 / 60) * day.second());\r\n    const currentSecondDegree = day.second() * 6;\r\n\r\n    this.setState({\r\n      currentHourDegree,\r\n      currentMinuteDegree,\r\n      currentSecondDegree,\r\n      dateTime: day.add(timeZone, 'h').format('LL LTS'),\r\n    });\r\n  }\r\n\r\n  getNumberWithSign(input) {\r\n    const sign = input < 0 ? '-' : '+';\r\n    return `${sign}${Math.abs(input)}`;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setData();\r\n    this.interval = setInterval(() => this.setData(), 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n}\r\n\r\nClock.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  onDeleteItem: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Clock from '../Clock/Clock';\r\n\r\nexport default function ListItem(props) {\r\n  const { className, item, onDeleteItem } = props;\r\n\r\n  return (\r\n    <li className={className}>\r\n      <Clock item={item} onDeleteItem={() => onDeleteItem(item.id)} />\r\n    </li>\r\n  );\r\n}\r\n\r\nListItem.propTypes = {\r\n  className: PropTypes.string,\r\n  item: PropTypes.object.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport Form from '../Form/Form';\r\nimport List from '../List/List';\r\nimport ListItem from '../ListItem/ListItem';\r\n\r\nexport default function WorldClockWidget() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const handleSubmit = (event) => !data.some((value) => value.city === event.city)\r\n    && setData((prev) => [...prev, event]);\r\n\r\n  const handleDeleteItem = (event) => setData((prev) => prev.filter((value) => value.id !== event));\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Form onHandleSubmit={handleSubmit} />\r\n      <List className='list__items' data={data}>\r\n        {data =>\r\n          data.map((item) =>\r\n            <ListItem key={item.id} className='list__item' item={item} onDeleteItem={handleDeleteItem} />)}\r\n      </List>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport WorldClockWidget from './components/WorldClockWidget/WorldClockWidget';\n\nfunction App() {\n\n  return (\n    <div className='component__wrapper'>\n      <WorldClockWidget />\n    </div>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}